apply plugin: "java"
sourceCompatibility = 1.7
targetCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets.main.java.srcDirs = ["src/"]
eclipse.project {
    name = appName + "-core"
}
dependencies {
    compile project(':trixt0r')
}


import com.badlogic.gdx.graphics.Texture
import com.badlogic.gdx.tools.texturepacker.TexturePacker

//TODO clean up the pack tasks

//TexturePacker settings
//*** XL 3840 x 2160
project.ext.settingsXL = new TexturePacker.Settings();
project.ext.settingsXL.filterMin = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsXL.filterMag = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsXL.useIndexes = false;
project.ext.settingsXL.maxWidth = 2048
project.ext.settingsXL.maxHeight = 2048
project.ext.settingsXL.paddingX = 14
project.ext.settingsXL.paddingY = 14
//*** L 2560 x 1440
project.ext.settingsL = new TexturePacker.Settings();
project.ext.settingsL.filterMin = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsL.filterMag = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsL.useIndexes = false;
project.ext.settingsL.maxWidth = 2048
project.ext.settingsL.maxHeight = 2048
project.ext.settingsL.paddingX = 10
project.ext.settingsL.paddingY = 10
project.ext.settingsL.scale = [0.66666666666]
//*** M 1920 x 1080
project.ext.settingsM = new TexturePacker.Settings();
project.ext.settingsM.filterMin = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsM.filterMag = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsM.useIndexes = false;
project.ext.settingsM.maxWidth = 1024
project.ext.settingsM.maxHeight = 1024
project.ext.settingsM.paddingX = 7
project.ext.settingsM.paddingY = 7
project.ext.settingsM.scale = [0.5]
//*** S 1280 x 720
project.ext.settingsS = new TexturePacker.Settings();
project.ext.settingsS.filterMin = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsS.filterMag = Texture.TextureFilter.MipMapLinearNearest;
project.ext.settingsS.useIndexes = false;
project.ext.settingsS.maxWidth = 1024
project.ext.settingsS.maxHeight = 1024
project.ext.settingsS.paddingX = 5
project.ext.settingsS.paddingY = 5
project.ext.settingsS.scale = [0.333333333]

task clearMap << {
    project.delete fileTree("../android/assets") { include  '**/maps/*.pack*.atlas',
                                                            '**/maps/*.pack*.png'}
}

task packMap << {
    clearMap.execute()

    String packName     = "map.pack";
    String source       = "core/assets_raw/xl/img/platform";
    String[] destinations = ["android/assets/xl/maps",
                           "android/assets/l/maps",
                           "android/assets/m/maps",
                           "android/assets/s/maps"];

    // generete texture packs
    TexturePacker.process(settingsXL, source, destinations[0], packName);
    TexturePacker.process(settingsL, source, destinations[1], packName);
    TexturePacker.process(settingsM, source, destinations[2], packName);
    TexturePacker.process(settingsS, source, destinations[3], packName);

    // genereate scaled, texture pack compatible tmx maps
}

task createAtlasReadyMapCopies(type:Exec) {
    String dir = 'assets_raw/xl/img/platform'
    workingDir dir
    def files = fileTree(dir) { include '*.tmx' }.files.name
    for(String file: files) {
        commandLine 'python', 'createAtlasReadyMapCopies.py', file
    }
}

//TODO safe  max atalas size?
task packMenu << {
    if (project.ext.has('menuL') && project.ext.has('menuXL')) {
        logger.info "Calling TexturePacker: "+ platform
        TexturePacker.process(settings, menuL[0], menuL[1], menuL[2])
        TexturePacker.process(settings, menuXL[0], menuXL[1], menuXL[2])
    }
}

project.ext.menuM = ["core/assets_raw/img/menu/540", "android/assets/m/img/menu", "menu.pack"]
project.ext.menuSettingsM = new com.badlogic.gdx.tools.texturepacker.TexturePacker.Settings();
project.ext.menuSettingsM.maxWidth = 2048
project.ext.menuSettingsM.maxHeight = 2048
project.ext.menuSettingsM.paddingX = 10
project.ext.menuSettingsM.paddingY = 10
project.ext.menuSettingsM.filterMin = Texture.TextureFilter.MipMapLinearNearest;
project.ext.menuSettingsM.filterMag = Texture.TextureFilter.MipMapLinearNearest;

task packMenuM << {
    if (project.ext.has('menuM')) {
        logger.info "Calling TexturePacker: "+ platform
        TexturePacker.process(menuSettingsM, menuM[0], menuM[1], menuM[2])
    }
}

project.ext.mobileControls = ["core/assets_raw/xl/img/mobile_controls", "android/assets/xl/img/mobile_controls", "mobile_controls.pack"]
project.ext.mobileControlsSettings = new com.badlogic.gdx.tools.texturepacker.TexturePacker.Settings();
project.ext.mobileControlsSettings.maxWidth = 2048
project.ext.mobileControlsSettings.maxHeight = 2048
project.ext.mobileControlsSettings.paddingX = 10
project.ext.mobileControlsSettings.paddingY = 10
project.ext.mobileControlsSettings.filterMin = Texture.TextureFilter.MipMapLinearNearest;
project.ext.mobileControlsSettings.filterMag = Texture.TextureFilter.MipMapLinearNearest;

task packMobileControls << {
    if (project.ext.has('mobileControls')) {
        logger.info "Calling TexturePacker: "+ platform
        TexturePacker.process(mobileControlsSettings, mobileControls[0], mobileControls[1], mobileControls[2])
    }
}